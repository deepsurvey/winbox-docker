name: Build and publish
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main



env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: harbor.obeone.cloud
  # github.repository as <account>/<repo>
  IMAGE_NAME: public/winbox

jobs:
  Build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # # Install the cosign tool except on PR
      # # https://github.com/sigstore/cosign-installer
      # - name: Install cosign
      #   if: github.event_name != 'pull_request'
      #   uses: sigstore/cosign-installer@7e0881f8fe90b25e305bbf0309761e9314607e25
      #   with:
      #     cosign-release: 'v1.9.0'


      # Workaround: https://github.com/docker/build-push-action/issues/461
      # - name: Setup Docker buildx
      #   uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PW }}

      - name: Build image
        id: build
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          pull: true
          load: true
          tags: winbox:latest
          cache-to: type=gha,mode=max
          cache-from: type=gha,mode=max
          
      - name: Getting version
        id: version
        uses: addnab/docker-run-action@v3
        with:
          image: winbox:latest
          shell: /bin/sh
          run: |
            version="$(cat /winbox_version)"
            echo ::set-output name=version::$version
            echo Version is $version

      - name: Parse semver string
        id: semver_parser 
        uses: booxmedialtd/ws-action-parse-semver@v1
        with: 
          input_string: "${{ steps.version.outputs.version }}"

        
      - name: Publish image
        id: publish
        run: |
          command="docker tag winbox:latest"
          $command ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.semver_parser.outputs.major }}
          $command ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}
          $command ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}.${{ steps.semver_parser.outputs.patch }}
          $command ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ steps.semver_parser.outputs.major }}
          $command ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.major }}
          $command ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.patch }}
          $command ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push -a winbox
