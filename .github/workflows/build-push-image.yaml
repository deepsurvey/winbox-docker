name: Build and publish
on:
  schedule:
    - cron: "23 2 * * *"
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: winbox

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  Build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Cosign
        uses: sigstore/cosign-installer@main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image
        id: build
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          pull: true
          load: true
          tags: winbox:latest
          cache-to: type=inline
          cache-from: type=gha,mode=max

      - name: Getting version
        id: version
        uses: addnab/docker-run-action@v3
        with:
          image: winbox:latest
          shell: /bin/sh
          run: |
            version="$(cat /winbox_version)"
            echo ::set-output name=version::$version
            echo Version is $version

      - name: Parse semver string
        id: semver_parser
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: "${{ steps.version.outputs.version }}"

      - name: Publish image
        id: push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          push: true
          pull: true
          cache-to: type=gha,mode=max
          cache-from: type=inline
          tags: |
            docker.io/obebete/${{ env.IMAGE_NAME }}:${{ steps.semver_parser.outputs.major }}
            ghcr.io/obeone/${{ env.IMAGE_NAME }}:${{ steps.semver_parser.outputs.major }}
            docker.io/obebete/${{ env.IMAGE_NAME }}:${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}
            ghcr.io/obeone/${{ env.IMAGE_NAME }}:${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}
            docker.io/obebete/${{ env.IMAGE_NAME }}:${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}.${{ steps.semver_parser.outputs.patch }}
            ghcr.io/obeone/${{ env.IMAGE_NAME }}:${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}.${{ steps.semver_parser.outputs.patch }}
            docker.io/obebete/${{ env.IMAGE_NAME }}:v${{ steps.semver_parser.outputs.major }}
            ghcr.io/obeone/${{ env.IMAGE_NAME }}:v${{ steps.semver_parser.outputs.major }}
            docker.io/obebete/${{ env.IMAGE_NAME }}:v${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}
            ghcr.io/obeone/${{ env.IMAGE_NAME }}:v${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}
            docker.io/obebete/${{ env.IMAGE_NAME }}:v${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}.${{ steps.semver_parser.outputs.patch }}
            ghcr.io/obeone/${{ env.IMAGE_NAME }}:v${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}.${{ steps.semver_parser.outputs.patch }}
            docker.io/obebete/${{ env.IMAGE_NAME }}:latest
            ghcr.io/obeone/${{ env.IMAGE_NAME }}:latest

      - name: Sign the images with GitHub OIDC Token
        run: cosign sign ${TAGS}
        env:
          TAGS: ${{ steps.push.outputs.metadata['image.name'] }}
          COSIGN_EXPERIMENTAL: true
